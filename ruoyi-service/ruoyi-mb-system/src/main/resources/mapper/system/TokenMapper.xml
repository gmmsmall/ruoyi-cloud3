<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.TokenMapper">

    <resultMap id="token" type="com.ruoyi.system.domain.Token">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="token_id" jdbcType="BIGINT" property="tokenId"/>
        <result column="token_no" jdbcType="VARCHAR" property="tokenNo"/>
        <result column="parent_no" jdbcType="VARCHAR" property="parentNo"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="perms" jdbcType="VARCHAR" property="perms"/>
        <result column="route" jdbcType="VARCHAR" property="route"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="order_num" jdbcType="INTEGER" property="orderNum"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <select id="selectList" resultType="com.ruoyi.system.domain.Token">
        select * from token
    </select>

    <insert id="insertToken" parameterType="token">
        insert into token
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tokenId != null and tokenId != '' ">token_id,</if>
            <if test="tokenNo != null and tokenNo != '' ">token_no,</if>
            <if test="parentNo != null and parentNo != '' ">parent_no,</if>
            <if test="name != null and name != '' ">name,</if>
            <if test="perms != null and perms != '' ">perms,</if>
            <if test="route != null and route != '' ">route,</if>
            <if test="type != null and type != '' ">type,</if>
            <if test="orderNum != null and orderNum != '' ">order_num,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="tokenId != null and tokenId != ''">#{tokenId},</if>
            <if test="tokenNo != null and tokenNo != ''">#{tokenNo},</if>
            <if test="parentNo != null and parentNo != ''">#{parentNo},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="perms != null and perms != ''">#{perms},</if>
            <if test="route != null and route != ''">#{route},</if>
            <if test="type != null and type != ''">#{type},</if>
            <if test="orderNum != null and orderNum != ''">#{orderNum},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateToken" parameterType="token">
        update token
        <set>
            <if test="tokenId != null and tokenId != ''">token_id = #{tokenId},</if>
            <if test="tokenNo != null and tokenNo != ''">token_no = #{tokenNo},</if>
            <if test="parentNo != null and parentNo != ''">parent_no = #{parentNo},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="perms != null and perms != ''">perms = #{perms},</if>
            <if test="route != null and route != ''">perms = #{route},</if>
            <if test="type != null and type != ''">type = #{type},</if>
            <if test="orderNum != null and orderNum != ''">order_num = #{orderNum},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime}</if>
        </set>
        where token_no = #{tokenNo}
    </update>

    <delete id="deleteToken" parameterType="Long">
        delete from token where token_no = #{tokenNo} or parent_no = #{tokenNo}
    </delete>

    <select id="findUserPermissions" resultMap="token">
        select distinct t.perms
        from t_role r
                 left join t_user_role ur on (r.role_id = ur.role_id)
                 left join t_user u on (u.user_id = ur.user_id)
                 left join role_token rt on (rt.role_id = r.role_id)
                 left join token t on (t.token_no = rt.token_no)
        where u.username = #{userName}
          and t.perms is not null
          and t.perms &lt;&gt; ''
    </select>

    <select id="findRoleTokens" resultMap="token">
        select t.*
        from token t
        where 1 = 1
          and t.token_no in
              (select distinct rt.token_no
               from role_token rt
                        left join t_role r on (rt.role_id = r.role_id)
               where rt.role_id = #{roleId})
    </select>

    <select id="findUserMenus" resultMap="token">
        select t.*
        from token t
        where t.token_type = 1
          and t.token_id in
              (select distinct rt.token_id
               from role_token rt
                        left join t_role r on (rt.role_id = r.role_id)
                        left join t_user_role ur on (ur.role_id = r.role_id)
                        left join t_user u on (u.user_id = ur.user_id)
               where u.username = #{userName})
        order by t.order_num
    </select>

    <select id="findUserIdsByTokenId" parameterType="string" resultType="string">
        SELECT user_id
        FROM t_user_role
        WHERE role_id IN (SELECT rt.role_id FROM role_token rt WHERE rt.token_no = #{tokenId})
    </select>


    <!-- 递归删除菜单，findMenuChildren为自定义的 MySQL函数，作用为根据当前 menuId递归查找出其所有下级菜单或按钮-->
    <delete id="deleteTokens" parameterType="string">
        DELETE
        FROM token
        WHERE token_id IN (SELECT m.token_id
                           FROM (SELECT token_id
                                 FROM token
                                 WHERE FIND_IN_SET(parent_no, getChildLst(#{tokenId}))) m)
    </delete>

    <select id="selectTokenByUserId" parameterType="java.lang.Long" resultMap="token">
        SELECT
            *
        FROM
            token t
        JOIN (
            SELECT
                token_no
            FROM
                role_token r
            JOIN (
                SELECT
                    role_id
                FROM
                    sys_user_role
                WHERE
                    user_id = #{userId}
            ) m ON r.role_id = m.role_id
        ) n ON t.token_no = n.token_no
    </select>
</mapper>
